$( function () { var c = document.getElementById( "canvas" ); $( window ).resize( function () { var b = Math.min( 600, $( window ).width() ); c.width != b && ( c.width = b ) } ); $( window ).trigger( "resize" ); $.browser.msie && 9 > $.browser.version && ( $( "#ie_go_to_hell" ).show( 0 ), $( "#canvas_wrap" ).hide() ) } ); var images = [], lib = {};
function init() { var c = document.getElementById( "canvas" ), b = new createjs.LoadQueue( !1 ); b.addEventListener( "fileload", function ( d ) { "image" == d.item.type && ( images[d.item.id] = d.result ) } ); b.addEventListener( "complete", function () { var d = new createjs.Stage( c ), b = new lib.Game( d ); d.addChild( b ); d.update(); createjs.Ticker.setFPS( 30 ) } ); b.addEventListener( "progress", function ( d ) { } ); b.loadManifest( [{ src: "images/milkmidi_icon.png", id: "milkmidi_icon" }] ) }
( function ( c, b, d ) {
    var l, m, q = d.Tween; ( c.Game = function ( d ) {
        function b() { var a = Math.min( 600, $( window ).width() ); l = a - 20; m = ( a - 260 ) / 2; for ( a = 0; a < e.length; a++ ) e[a].setPosition( a % f * 13, 13 * Math.floor( a / f ) ); n.update() } function g( a ) { for ( var b = 0; b < e.length; b++ ) { var c = e[b]; if ( 40 > Math.sqrt( Math.pow( c.x - a.stageX, 2 ) + Math.pow( c.y - a.stageY, 2 ) ) && c.lock ) { var f = 4 * ( 10 * Math.random() - 5 ), k = 4 * ( 10 * Math.random() - 5 ); c.smash( f, k ) } } p || ( createjs.Ticker.addEventListener( "tick", d ), p = !0 ) } var n = d; this.initialize(); var a = Math.min( 600, $( window ).width() );
        l = a - 20; m = ( a - 260 ) / 2; var h = -1; $( window ).resize( function () { -1 != h && clearTimeout( h ); h = setTimeout( b, 500 ) } ); for ( var e = [], f = 20, a = 0; 400 > a; a++ ) { var k = new c.Particles( images.milkmidi_icon, a % f * 13, 13 * Math.floor( a / f ) ); k.name = a + ""; this.addChild( k ); e.push( k ) } var p = !1; d.addEventListener( "stagemousedown", g ); for ( a = 0; 3 > a; a++ ) ( function ( a ) { setTimeout( function () { g( { stageX: 190 + 100 * a, stageY: 45 + 100 * a } ) }, 500 * a + 1E3 ) } )( a )
    } ).prototype = new d.Container; ( c.Particles = function ( b, c, g ) {
        function n() {
            q.get( a, { override: !0 } ).to( {
                x: h, y: e,
                alpha: 1, rotation: 0
            }, 300, d.Ease.circOut ).call( function () { a.onFloor = !1; a.scaleX = a.scaleY = 1; a.alpha = 1 } )
        } var a = this; this.initialize( b ); this.vy = this.vx = 0; this.lock = !0; this.onFloor = !1; this.cache( c, g, 13, 13 ); this.regX = c; this.regY = g; this.x = c + m; this.y = g + 20; var h = this.x, e = this.y; this.smash = function ( a, b ) { this.vx = a; this.vy = b; this.onFloor = this.lock = !1; this.scaleY = this.scaleX = 4 }; this.setPosition = function ( a, b ) { this.x = a + m; this.y = b + 20; h = this.x; e = this.y }; this.onTick = function () {
            this.lock || ( this.x += this.vx, this.y += this.vy,
            this.scaleY = this.scaleX += 0.15 * ( 1 - this.scaleX ), this.alpha = 0.75, this.rotation = 5 * this.vx, this.onFloor ? ( this.vx *= 0.9, 0.5 > Math.abs( this.vx ) && ( this.lock = !0, this.rotation = 0, setTimeout( n, 1600 ) ) ) : ( this.vy += 2, 0.5 > Math.abs( this.vy ) && 340 <= this.y && ( this.onFloor = !0, this.vy = 0, this.y = 350 ) ), 0 > this.x ? this.vx *= -0.5 : this.x > l && ( this.x = l, this.vx *= -0.5 ), 350 < this.y && ( this.y = 350, this.vy *= -0.5 ) )
        }
    } ).prototype = new d.Bitmap
} )( lib = lib || {}, images = images || {}, createjs = createjs || {} );